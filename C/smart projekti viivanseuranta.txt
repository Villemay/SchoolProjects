#include <project.h>
#include <stdio.h>
#include "FreeRTOS.h"
#include "task.h"
#include "Motor.h"
#include "Ultra.h"
#include "Nunchuk.h"
#include "Reflectance.h"
#include "Gyro.h"
#include "Accel_magnet.h"
#include "LSM303D.h"
#include "IR.h"
#include "Beep.h"
#include "mqtt_sender.h"
#include <time.h>
#include <sys/time.h>
#include "serial1.h"
#include <unistd.h>
#include <stdlib.h>
#include <time.h>



#if 1
void zmain(void)
{
    //sensorien käynnistys ja muuttujien määrittely
    struct sensors_ dig;
    IR_Start();
    reflectance_start();
    reflectance_set_threshold(14000, 14000, 14000, 14000, 14000, 14000);
    motor_start();
    int viivojenmaara=2;
    int ekakerta=1;
    int pysahdy=1;
    bool mist=false;
    bool run=false;
    TickType_t start;
    TickType_t stop;
    TickType_t time;
    TickType_t miss;
    TickType_t line;
  
    while(true)
    {   
        reflectance_digital(&dig); 
           //jos sw1 nappulaa painetaan robotti lähtee liikkeelle  
        if (SW1_Read()==0){
            motor_forward(20,10);
        }
        //jos robotti tulee viivan päälle se pysähtyy
        if(dig.l3 == 1 && dig.r3 == 1){
            motor_forward(0,0);
            //tarkistetaan pysähtyykö robotti ensimmäistä kertaa ja lähetetään tieto
            if(ekakerta==1){
            print_mqtt("zumo02/ready","line");
            ekakerta--;
            }
            //tarkistetaan pysähtyyko robotti viimeistä kertaa ja katsotaan ajat sekä lähetetään ne
            if(pysahdy==0){
                stop=xTaskGetTickCount();
                print_mqtt("Zumo02/stop","%d",stop);
                time=stop-start;
                print_mqtt("Zumo02/time","%d",time);
            }
            //laitetaan robotti odottamaan IR signaalia
            IR_wait();
            //kun IR signaali on saatu robotti ottaa ajan talteen ja lähettää sen
            start=xTaskGetTickCount();
            print_mqtt("Zumo02/start","%d",start);
            //laitetaan robotti uudestaan liikkeelle
            run=true;
            while(run){
                //haetaan uudestaan sensoreilla missä robotti menee
                reflectance_digital(&dig);
                //jos robotti on viivalla se jatkaa matkaa eteenpäin
                if(dig.l3==1 && dig.r3==1){
                while(dig.l3==1 && dig.r3 ==1){
                    reflectance_digital(&dig);
                    motor_forward(50,10);
                    }
                viivojenmaara--;
                //katsotaan oollaanko menty ensimmäisen viivan ohi
                if(viivojenmaara<=0){
                    run=false;
                    pysahdy--;
                }
                }
                //jos viiva on kahden keskimmäistä anturin alla liikutaan eteenpäin 
                if(dig.l1==1 && dig.r1==1){
                    motor_forward(40,100);
                    //tarkistetaan ollanko menty huti ja tultu takaisin viivalle
                    if(mist==true){
                    line=xTaskGetTickCount();    
                    print_mqtt("Zumo02/line","%d",line);
                    mist=false;
                    }
                //katsotaan onko viiva mennyt pois keskiantureista ja korkataan suuntaa tarvittaessa
                }else if(dig.l1==0 && dig.r1==1){
                    motor_turn(90,10,100);
                    
                }else if(dig.l1==1 && dig.r1==0){
                    motor_turn(10,90,100); 
                }
                //jos viiva on mennyt ohi molemmista keskiantureista katsotaan aika ja lähetetään se eteenpäin
                if(dig.l1==0 && dig.r1==0){
                    //tarkastetaan ettei tulotusta tulo peräkkäin
                    if(mist==false){
                        miss=xTaskGetTickCount();
                        print_mqtt("Zumo02/miss","%d",miss);
                    }
                    mist=true;
                }
                
            }       
        }   
    }
}
#endif